app.description = 'Questionnaire, with multiple pages and randomized question order.';
app.groupSize = 1;

app.questionsPerPage = 2;

app.questions = [
    {
        text: 'What is your favorite fruit?',
        type: 'open'
    },
    {
        text: 'Choose a letter',
        type: 'radio',
        answers: [
            {
                display_text: 'The letter A',
                value: 'a'
            },
            {
                display_text: 'The letter B',
                value: 'b'
            }
        ]
    },
    {
        text: 'Select a number from a range',
        type: 'range'
        // From 1 to 10, fixed.
    },
    {
        text: 'Select something',
        type: 'dropdown',
        answers: [
            {
                display_text: 'The letter A',
                value: 'a'
            },
            {
                display_text: 'The letter B',
                value: 'b'
            }
        ]
    }
]

let numPages = Math.ceil(app.questions.length / app.questionsPerPage);
for (let i=0; i<numPages; i++) {
    // DEFINE STAGES
    let page = app.newStage('page' + i);
    page.playerStart = function(player) {
        
        if (i == 0) { // do this once, for first page.
            let qIndices = [];
            for (let i=0; i<app.questions.length; i++) {
                qIndices.push(i);
                app.questions[i].position = i+1;
            }
            player.qIndices = qIndices; // store it on the player so we can use it on different pages.
            // After this code, player.questions will be a randomized version of some of app.questions.
            player.questions = [];
            while (qIndices.length > 0) {
                let random = Math.floor(Math.random() * qIndices.length);
                let qIndex = qIndices[random];
                let question = app.questions[qIndex];
                player.questions.push(question);
                qIndices.splice(random, 1);
            }
            player.curQuestionIndex = 0;
        }

        // Take questions for this page only.
        player.curQuestions = [];
        let numQsToAdd = app.questionsPerPage;
        while (numQsToAdd > 0) {
            player.curQuestions.push(player.questions[player.curQuestionIndex]);
            player.curQuestionIndex++;
            numQsToAdd--;
            if (player.curQuestionIndex >= player.questions.length) {
                break;
            }
        }
    }
    page.activeScreen = `
    <h4>QUESTIONS</h4>
    <div v-for='(question, qIndex) in player.curQuestions'>
        {{qIndex+1}}. {{question.text}}: <br>
        <template v-if='question.type == "open"'>
            <input :name='"player.q" + question.position' type='text'>
            <br><br>
        </template>
        <template v-if='question.type == "radio"'>
            <template v-for='(answer, aIndex) in question.answers'>
                <input :name='"player.q" + question.position' type='radio' required :value='answer.value' :id='"q" + question.position + "a" + aIndex'>
                <label :for='"q" + question.position + "a" + aIndex'>{{answer.display_text}}</label>
            </template>
            <br><br>
        </template>
        <template v-if='question.type == "dropdown"'>
            <select :name='"player.q" + question.position' required>
                <option v-for='(answer, aIndex) in question.answers' :value="answer.value">{{answer.display_text}}</option>
            </select>
            <br><br>
        </template>
        <template v-if='question.type == "range"'>
            <table>
                <tr>
                    <td>true</td>
                    <td v-for='n in 10'>{{n}}</td>
                    <td>not true</td>
                </tr>
                <tr>
                    <td>&nbsp;</td>
                    <td v-for='n in 10'>
                        <input :name='"player.q" + question.position' type='radio' required :value='n'>
                    </td>
                    <td>&nbsp;</td>
                </tr>
            </table>
            <br><br>
        </template>
    </div>
    `;
}

let results = app.newStage('results');
results.activeScreen = `
<h4>RESPONSES</h4>
<p v-for='(question, qIndex) in player.questions'>
    {{question.position}}. {{question.text}}<br>
    <b>{{player["q" + question.position]}}</b>.
</p>
`;


