app.description = 'Public goods game with punishment.';

app.groupSize   = 4;
app.endowment   = 20;
app.prodMult    = 2;
app.numPeriods  = 5;
app.groupMatchingType = 'PARTNER_RANDOM';

app.addSelectOption('punishment', [true, false]);
app.maxPun      = 3; // maximum times you can punish someone.
app.punMult     = 2; // the number of points the other player is punished, per point that you pay.

let decideStage = app.newStage('decide');
decideStage.activeScreen = `
    <p>DECISION</p>
    <p>Your endowment is {{app.endowment}} points.</p>
    <p>Choose your contribution amount (points): <input name='player.contribution' required type='number' min='0' :max='app.endowment' step='1'></p>
    <button>Make contribution</button>
`;

if (app.punishment) {
    let punishStage = app.newStage('punish');
    punishStage.activeScreen = `
    <p>PUNISHMENT</p>
    <p>You are Player {{ player.idInGroup }} in your group.</p>
    <p>Your endowment was {{ app.endowment }} points. Your contribution was {{ player.contribution }} points.</p>
    <p>The contributions from other players in your group were:</p>
    <div v-for='plyr in groupOtherPlayers'>
        Player {{ plyr.idInGroup }}: {{ plyr.contribution}} points.
    </div>
    </p>
    <p>If you like, you may punish the other members of your group.
        For every point you pay (up to {{ app.maxPun }} per target player), you may reduce the target player's points by {{ app.punMult }}.</p>
    <p v-for='plyr in groupOtherPlayers'>
        <span>Punishment for Player {{plyr.idInGroup}}:
        <input :name="'player.pun' + plyr.idInGroup" type="number" :max="app.maxPun" min=0 step=1 required>
    </p>
    <button>Make punishments</button>
    `;
    punishStage.updateObject = 'group'; // To show data from other players in group.
}

let resultsStage = app.newStage('results');
resultsStage.updateObject = 'group'; // To show data from other players in group.
resultsStage.groupStart = function(group) { // when a group starts this stage
    group.contributions = Utils.sum(group.players, 'contribution');
    group.production = group.contributions * app.prodMult;
    group.prodPerPlayer = group.production / group.players.length;

    if (app.punishment) {
        for (let i=0; i<group.players.length; i++) { // i = 0, 1, 2, 3
            group.players[i].sentPuns = 0;
            group.players[i].receivedPuns = 0;
        }
    }

    for (let i=0; i<group.players.length; i++) { // i = 0, 1, 2, 3
        let player = group.players[i];
        player.points = player.points + app.endowment - player.contribution + group.prodPerPlayer;
        let id = player.idInGroup;
        // Player i's punishment from other group members.
        if (app.punishment) {
            for (let j=0; j<group.players.length; j++) {
                if (i !== j) {
                    let playerJ = group.players[j];
                    let punishment = playerJ['pun' + id];
                    player.points = player.points - punishment*app.punMult;
                    player.receivedPuns += punishment;
                    playerJ.points = playerJ.points - punishment;
                    playerJ.sentPuns += punishment;
                }
            }
        }
    }
}
resultsStage.activeScreen = `
<style>
table {
    font-size: 16pt;
}
</style>
<p>RESULTS</p>
<p>You are Player {{ player.idInGroup }} in your group.</p>
<p>Your endowment was {{ app.endowment }} points. You contributed {{ player.contribution }} points.</p>
<p>The contributions from other players in your group were:
<div v-for='plyr in groupOtherPlayers'>
    Player {{ plyr.idInGroup }}: {{ plyr.contribution}} points.
</div>
</p>
<p>In total, players in your group contributed {{ group.contributions }} points,
    thus the total amount produced was {{ group.production | round(2) }} points,
    and the production per player was {{ group.prodPerPlayer | round(2) }} points.</p>
<p v-if='app.punishment'>The punishments you assigned to other players in your group were:</p>
<div v-if='app.punishment' v-for='plyr in groupOtherPlayers'>
    Player {{ plyr.idInGroup }}: {{ player['pun' + plyr.idInGroup] }} points.
</div>
<p v-if='app.punishment'>In total, you received {{ player.receivedPuns }} punishment points from other players.</p>
<p>Thus, your payoff in this period (in points) is:
<table>
<tr>
<td>Endowment:</td>
<td></td>
<td> {{ app.endowment }}</td>
</tr>
<tr>
<td>Your contribution:</td>
<td>-</td>
<td>{{ player.contribution }}</td>
</tr>
<tr>
<td>Group production per player:</td>
<td>+</td>
<td>{{ group.prodPerPlayer | round(2) }}</td>
</tr>
<tr v-if='app.punishment'>
<td>Punishments you gave out:</td>
<td>-</td>
<td>{{ player.sentPuns }}</td>
</tr>
<tr v-if='app.punishment'>
<td>Punishments you received:</td>
<td>-</td>
<td>{{ player.receivedPuns * app.punMult }}</td>
</tr>
<tr>
<td><b>Payoff:</b></td>
<td>=</td>
<td><b> {{ player.points | round(2) }} points</b>.</td>
</tr>
</table>
</p>
`;


// Center content, and add a nice grey box around it.
app.html = `
	<!DOCTYPE html>
	<html>
		<head>
			<meta http-equiv='Content-Type' content='text/html; charset=utf-8'>
			<meta name="viewport" content="width=device-width, initial-scale=1">
			<style>
			body {
                display: flex;
                max-width: 800px;
                margin-left: auto;
                margin-right: auto;
            }

            #jtree {
                min-width: 500px;
                min-height: 300px;
                padding: 10px;
                border: 1px solid #888;
                border-radius: 4px;
                align-self: start;
                background-color: #efefef;
				margin: auto;
            }

            @media screen and (max-width: 600px) {
                body {
                    background-color: #efefef;
                    align-items: start;
                    width: unset;
                    padding-top: unset;
                    justify-content: start;
                }
                #jtree {
                    margin: 10px;
                    border: none;
                    min-width: unset;
                    padding: unset;
                    min-height: unset;
                }

            }
			</style>
		</head>
		<body class='hidden'>
            <div id='jtree'>
				<p>{{ app.periodText }}: {{period.id}}/{{app.numPeriods}}</p>
				<span v-show='player.status=="playing"'>
					{{stages}}
				</span>
				<span v-show='["ready", "waiting", "finished", "done"].includes(player.status)'>
					{{waiting-screens}}
				</span>
			</div>
			{{scripts}}
		</body>
	</html>
`;