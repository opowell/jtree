app.groupSize = 2;
app.groupMatchingType = 'STRANGER';
app.numPeriods = 5;

// Each entry are the payoffs in a cell, [x, y] = row player gets x, column player gets y.
app.payoffs    = [
    [ [1, 2], [3, 4] ], // Row player plays up
    [ [5, 6], [7, 8] ]  // Row player plays down
];
app.labels = [
    ['UP', 'DOWN'], // Row player actions
    ['LEFT', 'RIGHT'] // Column player actions
];
app.roles = ['ROW', 'COLUMN'];

let decide = app.newStage('decide');
decide.playerStart = function(player) {
    player.role = app.roles[player.idInGroup-1];
    player.options = app.labels[player.idInGroup-1];
}
decide.activeScreen = `
    <style>
    table {
        font-size: 16pt;
    }
    </style>
    <table>
    <tr>
        <td></td>
        <td></td>
        <td>{{app.roles[1]}}</td>
    </tr>
    <tr>
        <td></td>
        <td></td>
        <td v-for='label in app.labels[1]'>{{label}}</td>
    </tr>
    <tr v-for='(row, index) in app.payoffs'>
        <td v-if='index == 0'>{{app.roles[0]}}</td>
        <td v-else></td>
        <td>{{app.labels[0][index]}}</td>
        <td v-for='col in row'>{{col}}</td>
    </tr>
    </table>
    <p>DECISION</p>
    <p>You are the {{player.role}} player. Choose an action.</p>
    <button v-for='(option, index) in player.options' name='player.action' :value='index' type='submit'>{{option}}</button>
`;

let results = app.newStage('results');
results.waitToStart = true;
results.groupStart = function(group) {
    let rowPlayer = group.playerWithId(1);
    let colPlayer = group.playerWithId(2);
    rowPlayer.points = app.payoffs[rowPlayer.action][colPlayer.action][0];
    colPlayer.points = app.payoffs[rowPlayer.action][colPlayer.action][1];
    rowPlayer.actionText = rowPlayer.options[rowPlayer.action];
    colPlayer.actionText = colPlayer.options[colPlayer.action];
    rowPlayer.partnerActionText = colPlayer.actionText;
    colPlayer.partnerActionText = rowPlayer.actionText;
    rowPlayer.partnerRole = colPlayer.role;
    colPlayer.partnerRole = rowPlayer.role;
}
results.activeScreen = `
    <p>RESULTS</p>
    <p>You are the {{player.role}} player. You chose {{player.actionText}}.</p>
    <p>The {{player.partnerRole}} player chose {{player.partnerActionText}}.</p>
    <p>Your payoff is {{player.points}} points.</p>
`;

// Center content, and add a nice grey box around it.
app.html = `
	<!DOCTYPE html>
	<html>
		<head>
			<meta http-equiv='Content-Type' content='text/html; charset=utf-8'>
			<meta name="viewport" content="width=device-width, initial-scale=1">
			<style>
			body {
                display: flex;
                max-width: 800px;
                margin-left: auto;
                margin-right: auto;
            }

            #jtree {
                min-width: 500px;
                min-height: 300px;
                padding: 10px;
                border: 1px solid #888;
                border-radius: 4px;
                align-self: start;
                background-color: #efefef;
				margin: auto;
            }

            @media screen and (max-width: 600px) {
                body {
                    background-color: #efefef;
                    align-items: start;
                    width: unset;
                    padding-top: unset;
                    justify-content: start;
                }
                #jtree {
                    margin: 10px;
                    border: none;
                    min-width: unset;
                    padding: unset;
                    min-height: unset;
                }

            }
			</style>
		</head>
		<body class='hidden'>
            <div id='jtree'>
				<p>{{ app.periodText }}: {{period.id}}/{{app.numPeriods}}</p>
				<span v-show='player.status=="playing"'>
					{{stages}}
				</span>
				<span v-show='["ready", "waiting", "finished", "done"].includes(player.status)'>
					{{waiting-screens}}
				</span>
			</div>
			{{scripts}}
		</body>
	</html>
`;