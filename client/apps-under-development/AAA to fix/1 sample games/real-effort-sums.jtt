app.description = 'Real-effort task, in which subjects have a fixed amount of time to calculate sums of numbers.';

app.addNumberOption('workTime', 120, 0, null, 1);
app.addNumberOption('numbersPerTasks', 3, 0, null, 1);
app.addNumberOption('maxNumber', 100, 0, null, 1);
app.addNumberOption('numTasks', 40, 0, null, 1);

app.tasks = [];
for (let i=0; i<app.numTasks; i++) {
    let problem = [];
    for (let j=0; j<app.numbersPerTasks; j++) {
        problem.push(Utils.randomInt(0, app.maxNumber));
    }
    app.tasks.push(problem);
}

// Answers are recorded as player.A1, player.A2, etc.
let workStage = app.newStage('work');
workStage.duration = app.workTime;
workStage.activeScreen = `
    <p>TASKS</p>
    <p>Calculate as many of the following sums as you can before time runs out.
    <p v-for='(task, index) in app.tasks'>
        <span>Q{{index+1}}: <b>{{ task.join(' + ') }}</b> = </span>
        <input :name="'player.A' + index" type="number" :max="app.maxNumber * app.numbersPerTask" style="width: 3em;">
    </p>
`;

let resultsStage = app.newStage('results');
resultsStage.playerStart = function(player) { // when a player starts this stage
    let app = player.app();
    // For each correct answer, increment player points by 1.
    for (let i=0; i<app.tasks.length; i++) {

        // the problem.
        let prob = app.tasks[i];

        // calculate the answer.
        let ans = 0;
        for (let j=0; j<prob.length; j++) {
            ans = prob[j] + ans;
        }

        // check if player's answer is correct.
        if (ans === player['A' + i]) {
            player.points++;
        }
    }
    player.participant.score = player.points;
}
resultsStage.activeScreen = `
    <p>RESULTS</p>
    <p>You calculated {{ player.points }} sums correctly.</p>
`;
